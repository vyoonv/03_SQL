SELECT * FROM EMPLOYEE ; 



-- 1 70년대 생이면서 여자, 성이 전씨인 사원
-- 사원명, 주민번호, 부서명, 직급명 
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE E, DEPARTMENT, JOB J
WHERE DEPT_CODE = DEPT_ID  AND E.JOB_CODE = J.JOB_CODE
AND EMP_NO LIKE '7%' 
AND SUBSTR(EMP_NO, 8, 1) = '2'
AND EMP_NAME LIKE '전%'; 


-- 2 이름에 형 이 들어가는 사원 
--사번, 사원명, 직급명, 부서명 
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE
FROM EMPLOYEE E, JOB J, DEPARTMENT
WHERE E.JOB_CODE = J.JOB_CODE AND DEPT_CODE = DEPT_ID
AND EMP_NAME LIKE '%형%'; 


--3 부서코드가 d5,6,7인 부서원들 
--사원명, 직급명, 부서코드, 부서명 
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE 
FROM EMPLOYEE E, JOB J, DEPARTMENT 
WHERE E.JOB_CODE = J.JOB_CODE AND DEPT_CODE = DEPT_ID 
AND DEPT_CODE IN ('D5', 'D6', 'D7'); 


--4 보너스를 받는 사원들의 
-- 사원명, 보너스포인트, 부서명, 근무지역명 조회 
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID AND LOCATION_ID = LOCAL_CODE
AND BONUS IS NOT NULL;


SELECT * FROM EMPLOYEE ; 

--5 부서가 있는 사원
--사원명, 직급명, 부서명, 지역명 
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE E, JOB J, DEPARTMENT, LOCATION
WHERE E.JOB_CODE = J.JOB_CODE AND DEPT_CODE = DEPT_ID 
AND LOCATION_ID = LOCAL_CODE 
AND E.DEPT_CODE IS NOT NULL; 


--6 급여 등급별 최소급여를 초과해서 받는 직원들 
--사원명, 직급명, 급여, 연봉(보너스포함)
SELECT EMP_NAME, JOB_NAME, SALARY, SALARY * 12
FROM EMPLOYEE E, JOB J, SAL_GRADE S
WHERE E.JOB_CODE = J.JOB_CODE AND E.SAL_LEVEL = S.SAL_LEVEL ;

SELECT EMP_NAME, JOB_NAME, SALARY, SALARY * (1 + NVL(BONUS, 0)) * 12 "연봉"
FROM EMPLOYEE 
JOIN JOB USING (JOB_CODE)
JOIN SAL_GRADE USING (SAL_LEVEL)
WHERE SALARY > MIN_SAL ;

SELECT * FROM EMPLOYEE e ;



--7 한국, 일본에 근무하는 직원들 
-- 사원명, 부서명, 지역명, 국가명 
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_CODE
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID AND LOCATION_ID = LOCAL_CODE
AND NATIONAL_CODE IN('KO', 'JP'); 


--8 
--사원명, 부서코드, 동료이름
SELECT E1.EMP_NAME, DEPT_CODE, NVL(E2.EMP_NAME, '-' ) 
FROM EMPLOYEE E1, EMPLOYEE E2
WHERE E1.DEPT_CODE = E2.DEPT_CODE(+) ;


--9 사원명, 직급명, 급여 
SELECT EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE JOB_CODE IN('J4','J7') AND BONUS IS NULL; 




--------------------------------------------------

--1. 
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
WHERE EMP_NO LIKE '7%'
AND SUBSTR(EMP_NO, 8, 1) = '2' 
AND EMP_NAME LIKE '전%'; 


--2
SELECT EMP_ID, EMP_NAME, JOB_NAME, DEPT_TITLE
FROM EMPLOYEE 
NATURAL JOIN JOB 
JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
WHERE EMP_NAME LIKE '%형%'; 


--3
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE 
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_TITLE IN ('해외영업1부', '해외영업2부'); 


--4
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE 
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
LEFT JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE BONUS IS NOT NULL; 


--5
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE 
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE); 


--6
SELECT EMP_NAME, JOB_NAME, SALARY, 
	SALARY * ( 1 + NVL (BONUS, 0)) *12 연봉   
FROM EMPLOYEE 
NATURAL JOIN JOB 
JOIN SAL_GRADE USING (SAL_LEVEL)
WHERE SALARY > MIN_SAL; 


--7
SELECT EMP_NAME 사원명, DEPT_TITLE 부서명, LOCAL_NAME 지역명, NATIONAL_NAME 국가명 
FROM EMPLOYEE 
JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING(NATIONAL_CODE) 
WHERE NATIONAL_CODE IN ('KO', 'JP'); 


--8 -- 본인 빼고 
SELECT E1.EMP_NAME 사원명, E1.DEPT_CODE 부서코드, 
				E2.EMP_NAME 동료이름 
FROM EMPLOYEE E1 
JOIN EMPLOYEE E2 ON (E1.DEPT_CODE = E2.DEPT_CODE)
WHERE E1.EMP_NAME != E2.EMP_NAME 
ORDER BY 사원명;


--9
SELECT EMP_NAME, JOB_NAME, SALARY
FROM EMPLOYEE 
NATURAL JOIN JOB 
WHERE BONUS IS NULL
AND JOB_CODE IN ('J4', 'J7'); 












